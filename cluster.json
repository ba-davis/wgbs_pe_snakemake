{
    "__default__":
    {
        "account": "davibr",
        "mem": "30G",
        "time": "0-24:00",
	"partition": "batch",
	"cores": "8",
	"nodes": "1",
        "qos": "normal"
    },
    "fastqc_raw":
    {
	"stdout": "logs/fastqcRaw_%A.out",
	"stderr": "logs/fastqcRaw_%A.err"
    },
    "trim_galore":
    {
        "stdout": "logs/trimgalore_%A.out",
        "stderr": "logs/trimgalore_%A.err"
    },
    "fastqc_trim":
    {
        "stdout": "logs/fastqcTrim_%A.out",
        "stderr": "logs/fastqcTrim_%A.err"
    },
    "bismark_aln":
    {
        "qos": "long_jobs",
	"time": "7-00",
        "mem": "120G",
        "stdout": "logs/bismark_%A.out",
        "stderr": "logs/bismark_%A.err"
    },
    "bismark_dedup":
    {
        "stdout": "logs/bismark_dedup_%A.out",
        "stderr": "logs/bismark_dedup_%A.err"
    },
    "meth_extract":
    {
        "stdout": "logs/meth_extract_%A.out",
        "stderr": "logs/meth_extract_%A.err"
    },
    "methylkit_ide":
    {
        "stdout": "logs/ide_%A.out",
        "stderr": "logs/ide_%A.err",
	"mem": "500G",
	"cores": "12"
    },
    "bsseq_ide":
    {
	"stdout": "logs/bsseq_ide_%A.out",
        "stderr": "logs/bsseq_ide_%A.err",
        "mem": "500G",
        "cores": "8"
    },
    "methylkit_dmr":
    {
        "stdout": "logs/methylkitDMR_%A.out",
        "stderr": "logs/methylkitDMR_%A.err",
        "mem": "500G",
        "cores": "8"
    },
    "annotate_methylkit_dmrs":
    {
	"stdout": "logs/methylkitDMR_annot_%A.out",
        "stderr": "logs/methylkitDMR_annot_%A.err"
    },
    "dmrseq_dmr":
    {
	"qos": "long_jobs",
        "time": "7-00",
	"stdout": "logs/dmrseq_%A.out",
        "stderr": "logs/dmrseq_%A.err",
	"mem": "500G",
        "cores": "12"
    },
    "dmrseq_explore":
    {
	"stdout": "logs/dmrseq_explore_%A.out",
        "stderr": "logs/dmrseq_explore_%A.err",
        "mem": "500G",
        "cores": "12"
    },
    "homer_dmrs":
    {
        "stdout": "logs/homer_%A.out",
        "stderr": "logs/homer_%A.err"
    },
    "homer_annotate":
    {
	"stdout": "logs/homer_annotate_%A.out",
	"stderr": "logs/homer_annotate_%A.err"
    },
    "homer_subset_annot":
    {
	"stdout": "logs/homer_sub_annot_%A.out",
	"stderr": "logs/homer_sub_annot_%A.err"
    }
}
